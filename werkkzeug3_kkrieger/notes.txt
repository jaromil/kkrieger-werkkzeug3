Werkkzeug 3 & KKrieger Project Notes -------------------------------------

.k   files open with Werkkzeug. Contains graphics.
.kx  files open with the player executable. Contains graphics and sound.
.v2m files are midi music files.

Main window for Werkkzeug is in this class:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\appbrowser.cpp

File selector class is:
sBrowserTree

Operators - Individual instructions for creating geometry, textures, etc.
struct KOp
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\kdoc.hpp

Geometry is created and modified in Werkkzeug using WerkOp objects.
These are a wrapper for the actual ops known as KOps.
WerkOps stores the position in the grid, width, name, etc.

DirectX Overlay - A dedicated area of video memory that can be overlayed on the primary surface
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\genoverlay.cpp

Virtual Machine - Stack & stack operations, execution code.
class sScriptVM
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\script.hpp

Bytecode For Virtual Machine
enum KBytecode2
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\script.hpp

When the user clicks on a Cube operator this is called:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\werkops.cpp
void Edit_Mesh_Cube(WerkkzeugApp *app,WerkOp *op)

Each time a parameter for a cube us adjusted this is called:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\genmesh.cpp
GenMesh * __stdcall Mesh_Cube(sInt tx,sInt ty,sInt tz,sInt flags,sFSRT srt)

Called each time the window is painted:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_gui.cpp
void sGuiManager::OnPaint()

Paints (renders) the 3D window pane:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\winview.cpp
void WinView::OnPaint3d(sViewport &viewPort)

Central point for handling different types of window actions:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\werkkzeug3\wz3_main.cpp
sBool sAppHandler(sInt code,sDInt value)

Glues everything together: logic, events, operators, splines, memory
class KEnvironment;
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\kdoc.hpp

System configuration is stored in this global variable:
struct sSystem_
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.hpp

Logging - System has custom logging methods:
void __cdecl sDPrintF(const sChar *format,...)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_types.cpp

Application starts here.
int APIENTRY WinMain(HINSTANCE inst,HINSTANCE prev,LPSTR cmdline,int show)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

All opcodes used by a demo.
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\player_demo\demo_oplist.cpp

File for demo is opened here:
sU8 *sSystem_::LoadFile(const sChar *name,sInt &size)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

File is made of an array of this type:
typedef unsigned char sU8; /* 8 bits */

Opens up dialog box that asks for resolution, vsync, fullscreen, etc
sBool ConfigDialog(sInt nr,const sChar *title)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

DirectX libraries are loaded here:
void sSystem_::InitX()
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Initialize Direct Sound:
sBool sSystem_::InitDS()
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Virtual machine written in assembly language for sound generation:
Originally written for NASM assembler.
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_viruz2a.asm

Debug build uses nasm.exe which is a 16bit DOS executable.
Release build uses nasmw.exe which is a 32bit Windows console executable.
NASM uses a variant of Intel assembly syntax instead of AT&T syntax.

Start DemoScene - Main Loop
DXDev->BeginScene()
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Start DirectX Screens
void sSystem_::InitScreens()
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Create Buffers For Geometry (Verticies)
One is a Vertex Buffer The Other Is An Index Buffer
void sSystem_::CreateGeoBuffer(sInt i,sInt dyn,sInt index,sInt size)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Geometry is loaded into the video card here:
sInt sSystem_::GeoAdd(sInt fvf,sInt prim)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Size of buffers is hard set to large number.
#define MAX_DYNVBSIZE (64*0x8000)   /*    65,535 */
#define MAX_DYNIBSIZE (3*2*0x40000) /* 1,572,864 */

Starting DirectSound - Sample Format - starts thread for sound
sBool sSystem_::InitDS()
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

Load Textures Into DirectX
sInt sSystem_::AddTexture(sInt xs,sInt ys,sInt format,sU16 *data,sInt mipcount,sInt miptresh)
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp

-------

player_intro will open up and play a file only if you turn on compatibility with Windows 98.
Only seems to work with debris_chaos.kx and intro.kx files.

player_intro.exe C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\data\debris_chaos.kx
player_intro.exe C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\data\intro.kx

Keep default options. Wait until the progress bar has completed, then press the spacebar.

-------

Compilation Notes:

/01 	Minimal Size
/GY[-]  Function level linking (only links in functions that are needed).

------

The build contains a forced Header file that is the System Configuration file.

C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\player_intro\intro_config.hpp

------

I noticed something unusual in the code at this location:
C:\Users\eclipse\source\repos\Kkrieger-Werkkzeug3\werkkzeug3_kkrieger\_start.cpp:1706

#pragma lekktor(on)

Everything after that is grayed out as though it is not part of the build.Couldn't figure out how the data from the .kx file makes it into player_intro.exe program.
Turns out lekktor is a misspelled German word for lektor.  (Remember they add an extra 'k' to the names of things.) That word means lecturer which translates into techspeak as logger.

When you turn that off, you can debug those lines after a rebuild.
